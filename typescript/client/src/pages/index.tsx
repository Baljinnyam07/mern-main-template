import { MovieCard } from "@/components/movie/MovieCard";
import { IMovie } from "@/interfaces/movie";
import Head from "next/head";
import { useState,useEffect } from "react";

export async function getStaticProps(){
  const response = await fetch(`http://localhost:7070/api/movies?limit=24`);
  const data = await response.json();
  return {
    props: { movies: data},
  };
}

export default function Home({movies: data}:{movies:IMovie[] }): JSX.Element {
  const [movies, setMovies] = useState<IMovie[]>(data);
  const [ordering, setOrdering] = useState<string>("");
  const [q, setQ] = useState<string>("");
  // const [search, setSearch] = useState<string>("");
  

  useEffect(() => {
    if(ordering !== "")
    fetch(`http://localhost:7070/api/movies?limit=100&ordering=${ordering}&q=${q}`)
      .then((res) => res.json())
      .then((data) => {
        setMovies(data);
      });
  }, [ordering,q]);


  return (
    <>
      <Head>
        <title>My client project</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container mx-auto"> 
      
          <label className="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">
            Search
          </label>
          <div className="relative">
            <div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
              <svg
                aria-hidden="true"
                className="w-5 h-5 text-gray-500 dark:text-gray-400"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                >0</path>
              </svg>
            </div>
            <input
              type="search"
              value={q}
              onChange={((e):void=>{
                setQ(e.target.value)
              })}
              // onKeyDown={(e):void=>{
              //   (e.key ==='Enter') ? setSearch(q): movies}}

              
              id="default-search"
              className="block w-full p-3 my-3 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
              placeholder="Search movies, Tv, actors,more"
              required
            />
            
          </div>
        
      <div className="bg-slate-100 min-h-screen">

        
          <div className="bg-white">
            <label               className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
>
            Хуудаслалт &nbsp;
            <select
              className="form-control d-inline-block w-auto"
              // onChange={(e) => {
              //   setCurrentPage(1);
              //   setPageSize(e.target.value);
              // }}
              // value={pageSize}
            >
              <option value="12">12</option>
              <option value="24">24</option>
              <option value="36">36</option>
              <option value="48">48</option>
              <option value="60">60</option>
            </select>
          </label>
            <select
              value={ordering}
              onChange={(e): void => {
                setOrdering(e.target.value);
              }}
              className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            >
              <option value="releasedAsc">Oldest</option>
              <option value="releasedDesc">Newest</option>
              <option value="imdbRatingDesc">Most popular</option>
              <option value="titleAsc">A-Z</option>
              <option value="titleDesc">Z-A</option>
            </select>
            <div className="p-4 grid grid-cols-6 gap-4">
              {movies.map((movie) => (
                <MovieCard movie={movie} key={movie._id} />
              ))}
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
